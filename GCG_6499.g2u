Program.Sub.Preflight.Start
V.Global.sError.Declare(String)

Program.Sub.Preflight.End

Program.Sub.Main.Start
'Author: Arturo Almaguer
'Date: August 30th 2021
'Customer: Franklin Display Group, quote number 12831
'Custom Workflow SO to WO will be generated when a NEW SO is created and the part number DOES NOT EXIST in inventory. 
'This script is launched off hook 11869 SO Header Pre Save Hook

Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

F.Intrinsic.Control.Try

	'Trigger the program just when user is on SO Header new, creating a new SO
	F.Intrinsic.Control.If(V.Caller.Switches, =, "N", "OR", V.Caller.Switches, =, "O") 
		
		F.Intrinsic.Control.CallSub("CheckParts")
	
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch

	F.Intrinsic.Control.CallSub(CatchError)
	
F.Intrinsic.Control.EndTry

Program.Sub.Main.End
Program.Sub.PMBrowser.Start
'This subroutine triggers a browser so the user is able to select who the PM actually is
F.Intrinsic.Control.Try

	V.Local.sReturn.Declare(String)
	V.Local.sSelectedUser.Declare(String)
	V.Local.sTitles.Declare(String)
	V.Local.iWidths.Declare(Long)
	v.Local.sSQL.Declare(String)
	V.Local.iCounter.Declare(Long)
	V.Local.sUsers.Declare(String)

	'Group should be the value in GS_GROUP column in USER_GROUPS table, PM for the customer
	Function.Global.Security.GetGroupMembers("PM", V.Caller.CompanyCode, V.Local.sReturn)
	F.Intrinsic.String.Split(V.Local.sReturn, "*!*", V.Local.sReturn)
	
	'Looping through array
	F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sReturn.UBound, 1)
		
		F.Intrinsic.Control.If(V.Local.iCounter, =, 0)
		
			F.Intrinsic.String.Build("'{0}', ", V.Local.sReturn(V.Local.iCounter), V.Local.sUsers)
			
		F.Intrinsic.Control.ElseIf(V.Local.iCounter, <>, V.Local.sReturn.UBound)
			
			F.Intrinsic.String.Build("{0}'{1}', ", V.Local.sUsers, V.Local.sReturn(V.Local.iCounter), V.Local.sUsers)	
	
		F.Intrinsic.Control.Else
			
			F.Intrinsic.String.Build("{0}'{1}'", V.Local.sUsers, V.Local.sReturn(V.Local.iCounter), V.Local.sUsers)
			
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Next(V.Local.iCounter)
	
	'Creating browser
	F.Intrinsic.String.Split("GS User*!*First Name*!*Last Name","*!*",V.Local.sTitles)
	F.Intrinsic.String.Split("100*!*200*!*200","*!*",V.Local.iWidths)
	
	F.Intrinsic.String.Build("select RTRIM(GS_USER) GS_USER, RTRIM(FIRST_NAME) FIRST_NAME, RTRIM(LAST_NAME) LAST_NAME from GLOBALCOMMON.USER_INFORMATION where GS_USER in ({0});", V.Local.sUsers, V.Local.sSQL)
	F.Intrinsic.UI.Browser("GCG 6499: Custom Workflow SO to WO. Please select who the PM actually is","Con", V.Local.sSQL, V.Local.sTitles, V.Local.iWidths, V.Local.sSelectedUser)
	
	'Splittinng variable to return just GS User selected
	F.Intrinsic.String.Split(V.Local.sSelectedUser, "*!*", V.Local.sSelectedUser)
	F.Intrinsic.Variable.AddRV("GSUser", V.Local.sSelectedUser)

F.Intrinsic.Control.Catch

	F.Intrinsic.Control.CallSub(CatchError)
	
F.Intrinsic.Control.EndTry

Program.Sub.PMBrowser.End
Program.Sub.CreateWF.Start
'Creating workflow from its template
F.Intrinsic.Control.Try

	V.Local.dDueDate.Declare(Date)
	V.Local.iWF.Declare(Long)
	V.Local.iTemplateID.Declare(Long)
	V.Local.sTitle.Declare(String)
	V.Local.sExample.Declare
	
	'Set start and end dates and the title
	F.Intrinsic.Date.DateAddWorkdays(V.Ambient.Date, 10, "62", V.Local.dDueDate)
	
	F.Global.WorkFlow.GetTemplateIDFromTitle("GCG_6499", V.Local.iTemplateID)
	
	F.Intrinsic.Control.If(V.Local.iTemplateID,=,-1)
	   F.Intrinsic.UI.Msgbox("Workflow template doesn't exist")
	   F.Intrinsic.Control.End
	F.Intrinsic.Control.EndIf
	
	'Creating new WF
	F.Intrinsic.String.Build("New SO: {0}  Part: {1}", V.Args.OrderNo.Trim,  V.DataTable.dtWF(V.Args.Counter).PART!FieldValTrim, V.Local.sTitle)
	F.Global.WorkFlow.CreateFromTemplate(V.Local.iTemplateID, V.Local.sTitle, V.Ambient.Date.PervasiveDate, V.Local.dDueDate.PervasiveDate, V.Caller.User, 0, V.Local.iWF)
	F.Intrinsic.Variable.AddRV("WFID", V.Local.iWF)

F.Intrinsic.Control.Catch

	F.Intrinsic.Control.CallSub(CatchError)
	
F.Intrinsic.Control.EndTry

Program.Sub.CreateWF.End
Program.Sub.CheckParts.Start
'This subroutine checks if parts from SO lines exist in inventory
F.Intrinsic.Control.Try

	V.Local.sOrderNo.Declare(String)
	V.Local.sSQL.Declare(String)
	V.Local.iCounter.Declare(Long)
	
	'V.Passed.000003 is the SO number
	F.Intrinsic.String.LPad(V.Passed.000003,"0", 7, V.Local.sOrderNo)
	
	'Checking if part exists in inventory
	F.ODBC.Connection!Con.OpenCompanyConnection
	F.Intrinsic.String.Build("select RTRIM(PART) PART, RECORD_NO from V_ORDER_LINES where ORDER_NO = '{0}';", V.Local.sOrderNo, V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtParts", "Con", V.Local.sSQL, True)
	F.Data.DataTable.AddColumn("dtParts", "PART_EXISTS", "String")
	
	'Dictionary to get WF flag
	F.Data.Dictionary.CreateFromSQL("dictWF", "Con", "select ORDER_LINE, WF_FLAG from GCG_6499")
	F.Data.Dictionary.SetDefaultReturn("dictWF", "")
	F.Data.DataTable.AddColumn("dtParts", "WF_FLAG", "String")
	F.Data.DataTable.FillFromDictionary("dtParts", "dictWF", "RECORD_NO", "WF_FLAG")
	F.Data.Dictionary.Close("dictWF")
	
	'Clear custom table 
	F.ODBC.Connection!Con.Execute("delete from GCG_6499")
	
	'Looping through parts from all SO lines
	F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtParts.RowCount--, 1)
		
		F.Intrinsic.Control.If(V.DataTable.dtParts(V.Local.iCounter).WF_FLAG!FieldValTrim, =, "Y")
		
			F.Intrinsic.String.Build("select DESCRIPTION from V_INVENTORY_MSTR where PART = '{0}';", V.DataTable.dtParts(V.Local.iCounter).PART!FieldValTrim, V.Local.sSQL)
			F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sSQL)
			
			F.Intrinsic.Control.If(V.Local.sSQL, =, "")
				
				'Setting value as N if it doesn't exist in inventory
				F.Data.DataTable.SetValue("dtParts", V.Local.iCounter, "PART_EXISTS", "N")
				
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Next(V.Local.iCounter)
	
	'Creating dataview to create new dt with just parts that doesn't exist in inventory
	F.Data.DataView.Create("dtParts", "dvParts", 22, "[PART_EXISTS] = 'N'","")	
	F.Data.DataView.ToDataTable("dtParts", "dvParts", "dtWF", True)
	F.Data.DataView.Close("dtParts", "dvParts")
	F.Data.DataTable.Close("dtParts")
	
	'Create WF for each part
	V.Local.iCounter.Set("0")
	F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtWF.RowCount--, 1)
	
		F.Intrinsic.Control.CallSub("PMBrowser")
		F.Intrinsic.Control.CallSub("CreateWF", "GSUser", V.Args.GSUser, "OrderNo", V.Local.sOrderNo, "Counter", V.Local.iCounter)
		
		'updating data in WF tables
		F.Intrinsic.String.Build("update ATG_WF_LINES set USER_GROUP = '{0}', USR_GRP_FLAG = '1' where WF_ID = '{1}' and USR_GRP_FLAG = '0';", V.Args.GSUser, V.Args.WFID, V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("update ATG_WF_LINES set SIGNOFF_USER_GRP = '{0}' where WF_ID = '{1}' and SIGNOFF_USER_GRP = 'PM';", V.Args.GSUser, V.Args.WFID, V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		
		'Updating tasks' due dates
		F.Intrinsic.Control.CallSub("DueDates", "WFID", V.Args.WFID)
	
	F.Intrinsic.Control.Next(V.Local.iCounter)
	
	F.ODBC.Connection!Con.Close

F.Intrinsic.Control.Catch

	F.Intrinsic.Control.CallSub(CatchError)
	
F.Intrinsic.Control.EndTry

Program.Sub.CheckParts.End
Program.Sub.CatchError.Start
F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Ambient.ScriptPath, V.Ambient.Newline, V.Ambient.SubroutineCalledFrom, V.Ambient.ErrorNumber, V.Ambient.ErrorDescription, V.Ambient.GABVersion, V.Global.sError) 
F.Intrinsic.UI.Msgbox(V.Global.sError)
F.Intrinsic.Control.End()
Program.Sub.CatchError.End
Program.Sub.DueDates.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.iCounter.Declare(Long)
	V.Local.dDueDate.Declare(Date)
	V.Local.iLastRow.Declare(Long)
	V.Local.dNewDueDate.Declare(Date)
	
	V.Local.iCounter.Set("0")
	
	'Creating dt to update due dates in DB
	F.Intrinsic.String.Build("select * from ATG_WF_LINES where WF_ID = '{0}' order by LINE;", V.Args.WFID, V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtDueDate", "Con", V.Local.sSQL, True)
	
	F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtDueDate.RowCount--, 1)
		
		F.Intrinsic.Control.If(V.DataTable.dtDueDate(V.Local.iCounter).LINE!FieldValTrim, =, "6")
			
			F.Intrinsic.Math.Sub(V.Local.iCounter, 1, V.Local.iLastRow)
			V.Local.dDueDate.Set(V.DataTable.dtDueDate(V.Local.iLastRow).DUE_DATE!FieldValTrim)
			F.Intrinsic.Date.DateAddWorkdays(V.Local.dDueDate, 4, "62", V.Local.dNewDueDate)
			
			'Updating Due date in DB
			F.Intrinsic.String.Build("update ATG_WF_LINES set DUE_DATE = '{0}' where WF_ID = '{1}' and LINE_ID = '{2}';", V.Local.dNewDueDate.PervasiveDate, V.Args.WFID, V.DataTable.dtDueDate(V.Local.iCounter).LINE_ID!FieldValTrim, V.Local.sSQL)
			F.ODBC.Connection!Con.Execute(V.Local.sSQL)
			
			'Updating value in dt
			F.Data.DataTable.SetValue("dtDueDate", V.Local.iCounter, "DUE_DATE", V.Local.dNewDueDate)
			
		F.Intrinsic.Control.ElseIf(V.DataTable.dtDueDate(V.Local.iCounter).LINE!FieldValTrim, =, "1")
		
			'Updating Due date in DB
			F.Intrinsic.String.Build("update ATG_WF_LINES set DUE_DATE = '{0}' where WF_ID = '{1}' and LINE_ID = '{2}';", V.Ambient.Date.PervasiveDate, V.Args.WFID, V.DataTable.dtDueDate(V.Local.iCounter).LINE_ID!FieldValTrim, V.Local.sSQL)
			F.ODBC.Connection!Con.Execute(V.Local.sSQL)
			
			'Updating value in dt
			F.Data.DataTable.SetValue("dtDueDate", V.Local.iCounter, "DUE_DATE", V.Ambient.Date)
			
		f.Intrinsic.Control.Else
			
			F.Intrinsic.Math.Sub(V.Local.iCounter, 1, V.Local.iLastRow)
			V.Local.dDueDate.Set(V.DataTable.dtDueDate(V.Local.iLastRow).DUE_DATE!FieldValTrim)
			F.Intrinsic.Date.DateAddWorkdays(V.Local.dDueDate, 1, "62", V.Local.dNewDueDate)
			
			'Updating Due date in DB
			F.Intrinsic.String.Build("update ATG_WF_LINES set DUE_DATE = '{0}' where WF_ID = '{1}' and LINE_ID = '{2}';", V.Local.dNewDueDate.PervasiveDate, V.Args.WFID, V.DataTable.dtDueDate(V.Local.iCounter).LINE_ID!FieldValTrim, V.Local.sSQL)
			F.ODBC.Connection!Con.Execute(V.Local.sSQL)
			
			'Updating value in dt
			F.Data.DataTable.SetValue("dtDueDate", V.Local.iCounter, "DUE_DATE", V.Local.dNewDueDate)
			
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Next(V.Local.iCounter)

F.Intrinsic.Control.Catch

	F.Intrinsic.Control.CallSub(CatchError)
	
F.Intrinsic.Control.EndTry

Program.Sub.DueDates.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$apadilla$}$20211011161102158$}$Lag9STqBJOmNXSbd5+msRcBWPGz0aFqSwHruISZ+s7ynmdU+KGzPM02xRaM9y3sFB5MYSSxDkvJNCMWVa3sksA==
Program.Sub.Comments.End